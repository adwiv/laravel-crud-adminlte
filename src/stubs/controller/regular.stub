<?php
/** @noinspection PhpMissingReturnTypeInspection */

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ rootNamespace }}Http\Requests\{{ model }}Request;
use Exception;

class {{ class }} extends Controller
{
    public function index()
    {
        ${{ pluralModelVariable }} = {{ model }}::paginate();
        return view('{{ viewprefix }}.index', compact('{{ pluralModelVariable }}'));
    }

    public function create()
    {
        ${{ modelVariable }} = null;
        $referrer = url()->previous();
        $action = route('{{ routeprefix }}.store');
        return view('{{ viewprefix }}.edit', compact('{{ modelVariable }}', 'action', 'referrer'));
    }

    public function store({{ model }}Request $request)
    {
        $referrer = $request->get('_referrer');
        $redirectTo = $referrer ?: route('{{ routeprefix }}.index');

        try {
            $fields = $request->validated();
            {{ model }}::create($fields);
        } catch (Exception $e) {
            return redirect($redirectTo)->with('warning', '{{ model }} creation failed. ' . $e->getMessage());
        }

        return redirect($redirectTo)->with('success', '{{ model }} created successfully');
    }

    public function show({{ model }} ${{ modelVariable }})
    {
        return view('{{ viewprefix }}.show', compact('{{ modelVariable }}'));
    }

    public function edit({{ model }} ${{ modelVariable }})
    {
        $referrer = url()->previous();
        $action = route('{{ routeprefix }}.update', ${{ modelVariable }});
        return view('{{ viewprefix }}.edit', compact('{{ modelVariable }}', 'action', 'referrer'));
    }

    public function update({{ model }}Request $request, {{ model }} ${{ modelVariable }})
    {
        $referrer = $request->get('_referrer');
        $redirectTo = $referrer ?: route('{{ routeprefix }}.index');

        try {
            $fields = $request->validated();
            ${{ modelVariable }}->update($fields);
        } catch (Exception $e) {
            return redirect($redirectTo)->with('warning', '{{ model }} update failed. ' . $e->getMessage());
        }

        return redirect($redirectTo)->with('success', '{{ model }} updated successfully');
    }

    public function destroy({{ model }} ${{ modelVariable }})
    {
        try {
            ${{ modelVariable }}->delete();
        } catch (Exception $e) {
            return redirect()->back()->with('warning', '{{ model }} deletion failed. ' . $e->getMessage());
        }

        return redirect()->back()->with('success', '{{ model }} deleted successfully');
    }
}
